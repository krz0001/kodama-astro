---
import "@fontsource/noto-sans-jp/400.css";
import "@fontsource/noto-sans-jp/900.css";

import { Image } from "astro:assets";
import { Debug } from "astro:components";
import { getRelease, getReleases } from "@utils/sanity";
import { urlForImage, urlForVideo } from "@utils/index";
import { toHTML } from "@portabletext/to-html";

import ReleaseLayout from "../../layouts/ReleaseLayout.astro";

import ReleaseNav from "@components/release/ReleaseNav.astro";
import ReleaseDescription from "@components/release/ReleaseDescription.astro";
import ReleaseCallToAction from "@components/release/ReleaseCallToAction.astro";
import ReleaseTracklist from "@components/release/ReleaseTracklist.astro";

import { getLocale } from "i18n:astro";
import ReleaseCredits from "@src/components/release/ReleaseCredits.astro";

export async function getStaticPaths() {
  const releases = await getReleases();
  return releases.map((release) => ({
    params: { slug: release.slug.current },
  }));
}

const { slug } = Astro.params;
const release = await getRelease(slug);

// STUFF THAT NEEDS TO BE HTML'D
const releaseColorStyle = `:root {
    --releaseColor: ${"#" + release.color};
    ${release.backgroundColor ? `--releaseBackgroundColor: ${"#" + release.backgroundColor};` : "--releaseBackgroundColor: #232426;"}
}`;

// get the release.description where "_key" is the current locale, or default to English
let releaseDescription = "";
if (typeof release.description !== "undefined") {
  releaseDescription = toHTML(
    (
      release.description.find((desc) => desc._key === getLocale()) ||
      release.description.find((desc) => desc._key === "en")
    ).value
  ) || "";
} else {
  releaseDescription = "";
}

// has background image or video?
const hasBackground = release.backgroundImage || release.backgroundVideo;
const backgroundVideoUrl = release.backgroundVideo ? urlForVideo(release.backgroundVideo) : null;

---

<style set:html={releaseColorStyle}></style>
<ReleaseLayout releaseTitle={release.title}>
  <div class={hasBackground ? "mx-auto" : "container mx-auto"}>
    { hasBackground ? (
        <div class="relative overflow-hidden">

          {release.backgroundImage && (
            <img
              src={urlForImage(release.backgroundImage).width(500).url()}
              alt=""
              style={{
                zIndex: '2',
                objectFit: "cover",
                filter: "blur(20px) brightness(0.5)",
                width: "100%",
                height: "100%",
                position: "absolute",
                maskImage: 'linear-gradient(to bottom, rgba(0, 0, 0, 1) 90%, rgba(0, 0, 0, 0) 100%)',
									WebkitMaskImage: 'linear-gradient(to bottom, rgba(0, 0, 0, 1) 90%, rgba(0, 0, 0, 0) 100%)'
              }}
              width={1280}
              height={720}
            />
          )}

          {backgroundVideoUrl && (
            <video
              autoplay
              loop
              muted
              playsinline
              class="object-cover object-center w-full h-full z-[3] absolute"
              style={{
                maskImage: 'linear-gradient(to bottom, rgba(0, 0, 0, 1) 90%, rgba(0, 0, 0, 0) 100%)',
                WebkitMaskImage: 'linear-gradient(to bottom, rgba(0, 0, 0, 1) 90%, rgba(0, 0, 0, 0) 100%)'
              }}
            >
              <source src={backgroundVideoUrl} type="video/mp4" />
            </video>
          )}

          <div class="md:container relative mx-auto z-10">
            <ReleaseNav class="bg-[var(--releaseBackgroundColor)] md:bg-transparent" />
            <div class="relative w-[800px] max-w-full mx-auto">
              <img
                src={urlForImage(release.logo).url()}
                height="340"
                width="1000"
                alt="Logo"
                class="object-cover object-center p-6 md:relative -top-14"
                style={{
                  filter: "drop-shadow(0px 0px 5px rgba(0, 0, 0, 0.75))",
                }}
              />
            </div>
          </div>
        </div>
      ) : (
        <>
          <ReleaseNav />
          <div class="relative w-[800px] max-w-full mx-auto">
            {release.logo ? (
              <img
                src={urlForImage(release.logo).url()}
                height="340"
                width="1000"
                alt="Logo"
                class="object-cover object-center p-6"
                style={{
                  filter: "drop-shadow(0px 0px 5px rgba(0, 0, 0, 0.75))",
                }}
              />
            ) : (
              <h1 class="text-4xl font-bold text-center">{release.slug.current}</h1>
            )}
          </div>
        </>
      )
    }
  </div>

  <div class="container mx-auto">
    {
      releaseDescription && (
        <div class="my-16">
          <div class="text-center text-sm my-4 max-w-[100ch] mx-auto" set:html={releaseDescription} />
        </div>
      )
    }

    {
      release.soundcloudTrackId && (
        <div>
          <iframe
            width="100%"
            height="166"
            scrolling="no"
            frameborder="no"
            allow="autoplay"
            src={
              "https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/" +
              release.soundcloudTrackId +
              "&color=%23" +
              release.color +
              "&auto_play=false&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true"
            }
          />
        </div>
      )
    }
  </div>

  <ReleaseDescription
    cover={release.cover}
    title={release.title}
    circleName={release.circleName}
    circleUrl={release.circleUrl}
    specification={release.specification}
    releaseDate={release.releaseDate +
      (release.releaseDateAddendum ? " " + release.releaseDateAddendum : "")}
    catalogNumber={release.catalogNumber}
    price={release.price}
    links={release.links}
  />

  {release.links && <ReleaseCallToAction links={release.links} />}

  {release.tracklist && <ReleaseTracklist tracklist={release.tracklist} cds={release.cds} />}

  <!-- YouTube -->
  {release.youtubeVideoId && (
    <section class="container mx-auto relative my-16">
        <iframe
          src={"https://www.youtube.com/embed/" + release.youtubeVideoId}
          allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
          allowfullscreen
          class="w-full aspect-video max-w-[700px] mx-auto"
        />
    </section>
  )}

  <!-- credits table -->
  {release.credits && <ReleaseCredits credits={release.credits} locale={getLocale()} />}

  <!-- footer credits -->
  <footer class='container mx-auto mt-16 mb-8 px-2 flex flex-wrap text-[#999] text-sm justify-between align-middle items-end'>
    <div>
      <a href={"/" + slug}>{release.title}</a>
      <br/>
      <span>©2021–{new Date().getFullYear()} </span><a href="/"> KodamaSounds</a>
      {release.footerCredits && <p class="mt-4 max-w-xl text-xs">{release.footerCredits}</p>}
    </div>
    
    <span>Design inspired by <a href="https://sanographix.github.io/tokusetsu3/">SANOGRAPHIX.NET</a></span>
  </footer>

  <details class="container mx-auto mt-16">
    <summary>Debug</summary>
    <Debug {release} />
  </details>
</ReleaseLayout>
